events {
  worker_connections 1024;
}
http {
  limit_req_zone $binary_remote_addr zone=mylimit:10m rate=50r/s;
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;
  include mime.types;

  upstream linktly_api {
    server 127.0.0.1:3000;
  }

  server {
    listen 8080;
    listen [::]:8080;

    # Custom JSON response for 429 errors
    error_page 429 = @429;
    location @429 {
        default_type application/json;
        return 429 '{"status": 429, "message": "Too Many Requests"}';
    }

    location /static/ {
        alias /var/www/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location /api/ {
        limit_req zone=mylimit burst=10 nodelay;
        limit_req_status 429;
        proxy_cache my_cache;
        # Allow Nginx to respect Cache-Control and Expires headers
        proxy_cache_valid any 0;
        proxy_cache_revalidate on;
        proxy_ignore_headers Set-Cookie;
        proxy_cache_methods GET;

        proxy_pass http://linktly_api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Forward backend Cache-Control header for clients
        # add_header Cache-Control $upstream_http_cache_control;
        # add_header Expires $upstream_http_expires;
    }
  }
}
